name: 🏠 Real Estate MVP CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Admin Panel Build and Test
  admin-panel:
    name: 🖥️ Admin Panel
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: admin-panel
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: admin-panel/package-lock.json
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🔍 Run ESLint
      run: npm run lint || echo "Linting completed with warnings"
      continue-on-error: true
    
    - name: 🧪 Run tests
      run: npm test -- --coverage --watchAll=false
    
    - name: 🏗️ Build production
      run: npm run build
    
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./admin-panel/coverage
        fail_ci_if_error: false

  # Mobile App Build and Test
  mobile-app:
    name: 📱 Mobile App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mobile-app
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile-app/package-lock.json
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🔍 Run ESLint
      run: npx eslint . --ext .js,.jsx,.ts,.tsx || echo "Linting completed with warnings"
      continue-on-error: true
    
    - name: 🧪 Run tests
      run: npm test -- --coverage --watchAll=false
    
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./mobile-app/coverage
        fail_ci_if_error: false

  # Security and Quality Checks
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: 🛡️ Run npm audit (Admin Panel)
      run: cd admin-panel && npm audit --audit-level moderate || echo "Audit completed with warnings"
      continue-on-error: true
    
    - name: 🛡️ Run npm audit (Mobile App)
      run: cd mobile-app && npm audit --audit-level moderate || echo "Audit completed with warnings"
      continue-on-error: true

  # Deploy to Firebase (only on main branch)
  deploy:
    name: 🚀 Deploy
    needs: [admin-panel, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: admin-panel/package-lock.json
    
    - name: 📦 Install admin panel dependencies
      run: cd admin-panel && npm ci
    
    - name: 🏗️ Build admin panel
      run: cd admin-panel && npm run build
    
    - name: 🚀 Deploy to Firebase
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
        channelId: live
